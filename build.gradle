// Gradle repositories and dependencies
buildscript
{
	repositories {
		mavenCentral()
		jcenter()
	}
}

plugins {
	id "net.minecraftforge.gradle.forge" version "2.0.1"
	id "java"
	id "com.github.hierynomus.license" version "0.11.0"
	id "eclipse"
	id "idea"
}

defaultTasks 'licenseFormat', 'build'

group = "cubichunks"
archivesBaseName = "CubicChunks"
version = "1.8.11-0.5"

// Minimum version of Java required
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

//used for license header
ext.projectName = 'Tall Worlds'
ext.inceptionYear = '2015'
ext.organizationUrl = ''
ext.organization = 'Tall Worlds'
minecraft {
	version = "1.8-11.14.3.1516"
	runDir = "run"
	    
	// the mappings can be changed at any time, and must be in the following format.
	// snapshot_YYYYMMDD   snapshot are built nightly.
	// stable_#            stables are built at the discretion of the MCP team.
	// Use non-default mappings at your own risk. they may not allways work.
	// simply re-run your setup task after changing the mappings to update your workspace.
	mappings = "snapshot_20141130"
	// makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

// Project repositories
repositories
{
	mavenCentral()
	maven
	{
		name 'sonatype'
		url 'https://oss.sonatype.org/content/groups/public/'
	}
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

	compile 'com.flowpowered:flow-noise:1.0.1-SNAPSHOT'
	compile 'org.mapdb:mapdb:1.0.7'
	testCompile 'junit:junit:4.11'

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


// License header formatting
license {
	ext.project = projectName
	ext.year = inceptionYear
	ext.name = organization
	ext.url = organizationUrl
	exclude "**/*.info"
	exclude "assets/*"
	header file('HEADER.txt')
	ignoreFailures false
	strictCheck true
	mapping {
		java = 'SLASHSTAR_STYLE'
	}
}

def runCfg = {
	standardInput = System.in
	workingDir = "eclipse"
	main = 'GradleStart'
	jvmArgs "-Xmx2G"
	enableAssertions = true
}

/**
 * Run and debug tasks. Used by Netbeans gradle plugin
 */ 
task run(type:JavaExec, dependsOn: build) {
	doFirst { 
		configure runCfg
	}
}

task debug(type:JavaExec, dependsOn: build) {
	doFirst {
		configure runCfg
		debug = true
	}
}

jar {
	manifest {
		attributes 'FMLAT': 'cubicchunks_at.cfg'
	}
}